#!/usr/bin/env python

import subprocess
import argparse
import os

parser = argparse.ArgumentParser(description='Get DnX artifacts from a bootloader image. If run with no --extract arguments, pulls loader.efi and fastboot.img to the current working directory')

parser.add_argument('fat_img', metavar="BOOTLOADER", help="Path to bootloader image")
parser.add_argument('-e', '--extract', nargs="+", help="filename or src=dest pair to extract")

args = parser.parse_args()

def get_fat_file(fat_img, in_path, out_path):
    subprocess.call(["mcopy", "-i", fat_img, "::" + in_path, out_path])

bpath = args.fat_img

if not args.extract:
    e = [("fastboot.img", "fastboot.img"), ("loader.efi", "loader.efi")]
else:
    e = []
    for i in args.extract:
        j = i.split("=")
        if len(j) == 1:
            e.append((i,i))
        else:
            e.append((j[0], j[1]))

for src, dest in e:
    if os.path.exists(dest):
        os.unlink(dest)
    get_fat_file(bpath, src, dest)

