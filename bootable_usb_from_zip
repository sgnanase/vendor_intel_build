#!/usr/bin/env python
#
# Copyright (C) 2008 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Generates a VFAT EFI System partition image from a provided
zip file containing its contents relative to the root directory
"""

import sys
import tempfile
import shutil
import zipfile

if sys.hexversion < 0x02040000:
    print >> sys.stderr, "Python 2.4 or newer is required."
    sys.exit(1)

# Android Release Tools
sys.path.append("build/tools/releasetools")
import common

sys.path.append("device/intel/build/releasetools")
import intel_common

OPTIONS = common.OPTIONS

def main(argv):

    def option_handler(o, a):
        if o in ("-b", "--bootimage"):
            OPTIONS.bootimage = a
        elif o in ("-z", "--zipfile"):
            OPTIONS.zipfile = a
        else:
            return False
        return True

    args = common.ParseOptions(argv, __doc__,
                            extra_opts="b:z:",
                            extra_long_opts=["bootimage=", "zipfile="],
                            extra_option_handler=option_handler)

    if (len(args) != 1):
        common.Usage(__doc__)
        sys.exit(1)

    if not OPTIONS.zipfile:
        common.Usage(__doc__)
        sys.exit(1)

    # Make a new zip file with the same contents as the one passed in
    # but also add the fastboot image to the root.
    tf = tempfile.NamedTemporaryFile(delete=False)
    z = tf.name
    OPTIONS.tempfiles.append(z)
    tf.close()
    shutil.copyfile(OPTIONS.zipfile, z)
    rootzip = zipfile.ZipFile(z, "a")
    if hasattr(OPTIONS, 'bootimage'):
        rootzip.write(OPTIONS.bootimage, "espboot.img")
    rootzip.close()

    intel_common.MakeVFATFilesystem(z, args[0], extra_size=10*1024*1024)
    common.Cleanup()

if __name__ == '__main__':
    try:
        common.CloseInheritedPipes()
        main(sys.argv[1:])
    except common.ExternalError, e:
        print
        print "   ERROR: %s" % (e,)
        print
        sys.exit(1)

